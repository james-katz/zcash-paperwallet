name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*' # Trigger only when pushing tags that start with 'v'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Rust toolchain
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      # Step 3: Build the binary
      - name: Build the project
        run: |
          cargo build --release

      # Step 4: Upload the artifact (binary)
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: zcash-paperwallet-${{ matrix.os }}
          path: |
            ./target/${{ matrix.target }}/release/zcash-paperwallet${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Create a release on GitHub
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automatic release created by GitHub Actions for version ${{ github.ref_name }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Download artifacts from all platforms
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      # Step 4: Upload binaries to the release
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/zcash-paperwallet
          asset_name: zcash-paperwallet${{ runner.os == 'windows-latest' && '.exe' || '' }}
          asset_content_type: application/octet-stream